{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n\nconst useGet = url => {\n  _s();\n\n  console.log(url);\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const abortCont = new AbortController();\n    fetch(url, {\n      signal: abortCont.signal\n    }).then(res => {\n      if (!res.ok) {\n        throw Error(\"Could not fetch the data for the Server\");\n      }\n\n      return res.json();\n    }).then(data => {\n      setIsPending(false);\n      setData(data);\n      setError(null);\n    }).catch(err => {\n      if (err.name === \"AbortError\") {\n        console.log(\"Fetch aborted\");\n      } else {\n        setIsPending(false);\n        setError(err.message);\n      }\n    });\n    return () => abortCont.abort();\n  }, [url]);\n  return {\n    data,\n    isPending,\n    error\n  };\n};\n\n_s(useGet, \"VxPkICXS4AfkXU1R8tuEJAA8e58=\");\n\nexport default useGet;","map":{"version":3,"sources":["/home/mukilan/Desktop/Web-App/Mini-Blog/src/component/server_fetch/useGet.js"],"names":["useState","useEffect","useGet","url","console","log","data","setData","isPending","setIsPending","error","setError","abortCont","AbortController","fetch","signal","then","res","ok","Error","json","catch","err","name","message","abort"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,MAAM,GAAIC,GAAD,IAAS;AAAA;;AACtBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,IAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,SAAS,GAAG,IAAIC,eAAJ,EAAlB;AACAC,IAAAA,KAAK,CAACX,GAAD,EAAM;AAAEY,MAAAA,MAAM,EAAEH,SAAS,CAACG;AAApB,KAAN,CAAL,CACGC,IADH,CACSC,GAAD,IAAS;AACb,UAAI,CAACA,GAAG,CAACC,EAAT,EAAa;AACX,cAAMC,KAAK,CAAC,yCAAD,CAAX;AACD;;AACD,aAAOF,GAAG,CAACG,IAAJ,EAAP;AACD,KANH,EAOGJ,IAPH,CAOSV,IAAD,IAAU;AACdG,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAF,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAK,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KAXH,EAYGU,KAZH,CAYUC,GAAD,IAAS;AACd,UAAIA,GAAG,CAACC,IAAJ,KAAa,YAAjB,EAA+B;AAC7BnB,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD,OAFD,MAEO;AACLI,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,QAAAA,QAAQ,CAACW,GAAG,CAACE,OAAL,CAAR;AACD;AACF,KAnBH;AAoBA,WAAO,MAAMZ,SAAS,CAACa,KAAV,EAAb;AACD,GAvBQ,EAuBN,CAACtB,GAAD,CAvBM,CAAT;AAyBA,SAAO;AAAEG,IAAAA,IAAF;AAAQE,IAAAA,SAAR;AAAmBE,IAAAA;AAAnB,GAAP;AACD,CAhCD;;GAAMR,M;;AAkCN,eAAeA,MAAf","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst useGet = (url) => {\n  console.log(url);\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const abortCont = new AbortController();\n    fetch(url, { signal: abortCont.signal })\n      .then((res) => {\n        if (!res.ok) {\n          throw Error(\"Could not fetch the data for the Server\");\n        }\n        return res.json();\n      })\n      .then((data) => {\n        setIsPending(false);\n        setData(data);\n        setError(null);\n      })\n      .catch((err) => {\n        if (err.name === \"AbortError\") {\n          console.log(\"Fetch aborted\");\n        } else {\n          setIsPending(false);\n          setError(err.message);\n        }\n      });\n    return () => abortCont.abort();\n  }, [url]);\n\n  return { data, isPending, error };\n};\n\nexport default useGet;\n"]},"metadata":{},"sourceType":"module"}