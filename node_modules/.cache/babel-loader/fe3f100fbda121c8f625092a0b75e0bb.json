{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n\nconst usePost = (url, data) => {\n  _s();\n\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const abortCont = new AbortController();\n    fetch(url, {\n      signal: abortCont.signal\n    }).then(res => {\n      if (!res.ok) {\n        throw Error(\"Could not Connect with the Server\");\n      }\n    }).then(() => {\n      setError(null);\n    }).catch(err => {\n      if (err.name === \"AbortError\") {\n        console.log(\"Fetch aborted\");\n      } else {\n        setError(err.message);\n      }\n    });\n    return () => abortCont.abort();\n  }, [url]);\n  return {\n    error\n  };\n};\n\n_s(usePost, \"JfhGochNIqPkY17zyDsXnSE7zLQ=\");\n\nexport default usePost;","map":{"version":3,"sources":["/home/mukilan/Desktop/Web-App/Mini-Blog/src/component/server_fetch/usePost.js"],"names":["useState","useEffect","usePost","url","data","error","setError","abortCont","AbortController","fetch","signal","then","res","ok","Error","catch","err","name","console","log","message","abort"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,OAAO,GAAG,CAACC,GAAD,EAAMC,IAAN,KAAe;AAAA;;AAC7B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,SAAS,GAAG,IAAIC,eAAJ,EAAlB;AACAC,IAAAA,KAAK,CAACN,GAAD,EAAM;AAAEO,MAAAA,MAAM,EAAEH,SAAS,CAACG;AAApB,KAAN,CAAL,CACGC,IADH,CACSC,GAAD,IAAS;AACb,UAAI,CAACA,GAAG,CAACC,EAAT,EAAa;AACX,cAAMC,KAAK,CAAC,mCAAD,CAAX;AACD;AACF,KALH,EAMGH,IANH,CAMQ,MAAM;AACVL,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KARH,EASGS,KATH,CASUC,GAAD,IAAS;AACd,UAAIA,GAAG,CAACC,IAAJ,KAAa,YAAjB,EAA+B;AAC7BC,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD,OAFD,MAEO;AACLb,QAAAA,QAAQ,CAACU,GAAG,CAACI,OAAL,CAAR;AACD;AACF,KAfH;AAgBA,WAAO,MAAMb,SAAS,CAACc,KAAV,EAAb;AACD,GAnBQ,EAmBN,CAAClB,GAAD,CAnBM,CAAT;AAqBA,SAAO;AAAEE,IAAAA;AAAF,GAAP;AACD,CAzBD;;GAAMH,O;;AA2BN,eAAeA,OAAf","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst usePost = (url, data) => {\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const abortCont = new AbortController();\n    fetch(url, { signal: abortCont.signal })\n      .then((res) => {\n        if (!res.ok) {\n          throw Error(\"Could not Connect with the Server\");\n        }\n      })\n      .then(() => {\n        setError(null);\n      })\n      .catch((err) => {\n        if (err.name === \"AbortError\") {\n          console.log(\"Fetch aborted\");\n        } else {\n          setError(err.message);\n        }\n      });\n    return () => abortCont.abort();\n  }, [url]);\n\n  return { error };\n};\n\nexport default usePost;\n"]},"metadata":{},"sourceType":"module"}