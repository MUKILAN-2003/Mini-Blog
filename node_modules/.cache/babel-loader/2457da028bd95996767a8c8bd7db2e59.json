{"ast":null,"code":"var _jsxFileName = \"/home/mukilan/Desktop/Web-App/Mini-Blog/src/component/form_component/reset_pass.js\",\n    _s = $RefreshSig$();\n\nimport { Link } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ResetPass = props => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [mail_id, setMail] = useState(\"\");\n  const [isPending, setIsPending] = useState(false);\n  const [errmsg, setErrmsg] = useState(null);\n\n  const Sumbit = e => {\n    setIsPending(true);\n    e.preventDefault();\n    const data = {\n      name,\n      mail_id,\n      feedback\n    };\n    fetch(props.LocationPost, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    }).then(res => {\n      setErrmsg(null);\n      return res.json().then(err => {\n        if (err.message === \"CleanRun\") {\n          setIsPending(false);\n          history.push(\"/\");\n        } else {\n          setIsPending(false);\n          setErrmsg(err.message);\n        }\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: props.LocationPost,\n      method: \"post\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Username :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        autoComplete: \"off\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Mail Id :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"mail_id\",\n        autoComplete: \"off\",\n        value: name,\n        onChange: e => setMail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: Sumbit,\n        children: \"Sumbit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-below\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/feedback\",\n        children: \"feedback\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/forgot_pass\",\n        children: \"forgot password?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ResetPass, \"b3jlqeSm/G88HhhR3TLHgGNp8l0=\");\n\n_c = ResetPass;\nexport default ResetPass;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPass\");","map":{"version":3,"sources":["/home/mukilan/Desktop/Web-App/Mini-Blog/src/component/form_component/reset_pass.js"],"names":["Link","useHistory","useState","ResetPass","props","name","setName","mail_id","setMail","isPending","setIsPending","errmsg","setErrmsg","Sumbit","e","preventDefault","data","feedback","fetch","LocationPost","method","headers","body","JSON","stringify","then","res","json","err","message","history","push","catch","console","log","target","value"],"mappings":"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","sourcesContent":["import { Link } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport { useState } from \"react\";\n\nconst ResetPass = (props) => {\n  const [name, setName] = useState(\"\");\n  const [mail_id, setMail] = useState(\"\");\n  const [isPending, setIsPending] = useState(false);\n  const [errmsg, setErrmsg] = useState(null);\n  const Sumbit = (e) => {\n    setIsPending(true);\n    e.preventDefault();\n    const data = { name, mail_id, feedback };\n    fetch(props.LocationPost, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(data),\n    })\n      .then((res) => {\n        setErrmsg(null);\n        return res.json().then((err) => {\n          if (err.message === \"CleanRun\") {\n            setIsPending(false);\n            history.push(\"/\");\n          } else {\n            setIsPending(false);\n            setErrmsg(err.message);\n          }\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  return (\n    <div className=\"form-center\">\n      <h2>Reset Password</h2>\n      <form action={props.LocationPost} method=\"post\">\n        <label>Username :</label>\n        <input type=\"text\" name=\"username\" autoComplete=\"off\" value={name}\n          onChange={(e) => setName(e.target.value)} required />\n        <label>Mail Id :</label>\n        <input type=\"email\" name=\"mail_id\" autoComplete=\"off\" value={name}\n          onChange={(e) => setMail(e.target.value)} required />\n\n        <button onClick={Sumbit}>Sumbit</button>\n      </form>\n      <div className=\"form-below\">\n        <Link to=\"/feedback\">feedback</Link>\n        <Link to=\"/forgot_pass\">forgot password?</Link>\n      </div>\n    </div>\n  );\n};\n\nexport default ResetPass;\n"]},"metadata":{},"sourceType":"module"}